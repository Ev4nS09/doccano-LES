# Generated by Django 4.2.20 on 2025-04-30 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('examples', '0001_initial'),
        ('label_types', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Span',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('prob', models.FloatField(default=0.0)),
                ('manual', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_offset', models.IntegerField()),
                ('end_offset', models.IntegerField()),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spans', to='examples.example')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='label_types.spantype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Segmentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('prob', models.FloatField(default=0.0)),
                ('manual', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('points', models.JSONField(default=list)),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmentations', to='examples.example')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='label_types.categorytype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('prob', models.FloatField(default=0.0)),
                ('manual', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='examples.example')),
                ('from_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_relations', to='labels.span')),
                ('to_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_relations', to='labels.span')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='label_types.relationtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('prob', models.FloatField(default=0.0)),
                ('manual', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='examples.example')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='label_types.categorytype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BoundingBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('prob', models.FloatField(default=0.0)),
                ('manual', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bboxes', to='examples.example')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='label_types.categorytype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TextLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('prob', models.FloatField(default=0.0)),
                ('manual', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='examples.example')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('example', 'user', 'text')},
            },
        ),
        migrations.AddConstraint(
            model_name='span',
            constraint=models.CheckConstraint(check=models.Q(('start_offset__gte', 0)), name='startOffset >= 0'),
        ),
        migrations.AddConstraint(
            model_name='span',
            constraint=models.CheckConstraint(check=models.Q(('end_offset__gte', 0)), name='endOffset >= 0'),
        ),
        migrations.AddConstraint(
            model_name='span',
            constraint=models.CheckConstraint(check=models.Q(('start_offset__lt', models.F('end_offset'))), name='start < end'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('example', 'user', 'label')},
        ),
        migrations.AddConstraint(
            model_name='boundingbox',
            constraint=models.CheckConstraint(check=models.Q(('x__gte', 0)), name='x >= 0'),
        ),
        migrations.AddConstraint(
            model_name='boundingbox',
            constraint=models.CheckConstraint(check=models.Q(('y__gte', 0)), name='y >= 0'),
        ),
        migrations.AddConstraint(
            model_name='boundingbox',
            constraint=models.CheckConstraint(check=models.Q(('width__gte', 0)), name='width >= 0'),
        ),
        migrations.AddConstraint(
            model_name='boundingbox',
            constraint=models.CheckConstraint(check=models.Q(('height__gte', 0)), name='height >= 0'),
        ),
    ]
